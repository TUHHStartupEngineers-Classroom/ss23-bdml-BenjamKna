{
  "hash": "3ad0dd15c59a6732ee0889127786dd8f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 \"\nauthor: \"Benjamin Knaack\"\ndate: \"2023-05-16\"\noutput: html_document\n---\n\n\n###### Step 1 - Build a model (linear regression) and import libraries.\n\n::: {.cell hash='02_challenge_cache/html/unnamed-chunk-1_5ea1f6b04bbc382fee717b8afb18e320'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(parsnip)\nlibrary(recipes)\nlibrary(rsample)\nlibrary(yardstick)\nlibrary(workflows)\n\n\n\nbike_features_tbl <- readRDS(\"~/Documents/GitHub/ss23-bdml-BenjamKna/bike_features_tbl.rds\")\n#glimpse(bike_features_tbl)\n#names(bike_features_tbl)\n\n\nbike_features_tbl <- bike_features_tbl %>% \n  filter(category_2 != \"E-Road\" & category_2 != \"Fat Bikes\" & category_2 != \"Adventure\"& category_2 != \"Downhill\" & category_2 != \"Dirt Jump\" & category_2 != \"E-Gravel\" & category_2 != \"E-Fitness\" ) \n\n\nmodel_linear_lm <- linear_reg(mode = \"regression\") %>%\n  set_engine(\"lm\")\n```\n:::\n\n\n##### Step 2 - Create features with the recipes package. First the dataset is split into test and training part. In the recipe the price is defined as the outcome with the 'Tyre 1' part and category 2 as predictors. For both dummy variables are created. Fitting of the model is done in step 4 with the fit function.\n\n\n::: {.cell hash='02_challenge_cache/html/unnamed-chunk-2_1cc20255cf82f0e6968da7b727de9e42'}\n\n```{.r .cell-code}\ndata_split <- initial_split(bike_features_tbl,  prop   = 0.80, \n                            strata = \"category_2\")\n\n# Create data frames for the two sets:\ntrain_tbl <- training(data_split)\ntest_tbl  <- testing(data_split)\n\n\nrecipe_obj <- recipe(price ~ category_2 + `Tyre 1` , data = train_tbl) %>%\n  step_dummy(category_2 ,`Tyre 1`, one_hot = TRUE) %>%\n  step_naomit(all_predictors()) %>%\n  step_zv(all_predictors()) \n\n # prep_recipe_obj <- prep(recipe_obj,train_tbl)\n\n\n\n  #train_transformed_tbl <- bake(prep_obj, train_tbl)\n  #test_transformed_tbl  <- bake(prep_obj, test_tbl)\n```\n:::\n\n\n\n###### Step 3 - Bundle the model and recipe with the workflow package\n\n::: {.cell hash='02_challenge_cache/html/unnamed-chunk-3_42ac04ae2c8ce3b67980c89135a5d9f3'}\n\n```{.r .cell-code}\nbikefeat_wflow <- \n  workflow() %>% \n  add_model(model_linear_lm) %>% \n  add_recipe(recipe_obj)\n```\n:::\n\n###### Step 4 - Evaluate your model with the yardstick package\n\n::: {.cell hash='02_challenge_cache/html/unnamed-chunk-4_1dc843dc4360bb51d5391c8e6fc838e5'}\n\n```{.r .cell-code}\ncalc_metrics <- function(model, new_data = test_tbl) {\n  \n  model %>%\n    predict(new_data = new_data) %>%\n    \n    bind_cols(new_data %>% select(price)) %>%\n    yardstick::metrics(truth = price, estimate = .pred)\n  \n}\n\n\n\nbikefeat_fitted_mod <- \n  bikefeat_wflow %>% \n  fit(data = train_tbl)\n\n\nbikefeat_fitted_mod %>% calc_metrics(test_tbl)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1289.3002368\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"0.5170052\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"983.4292067\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}