{
  "hash": "dae7db625755faa476092d8466c23d06",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4 \"\nauthor: \"Benjamin Knaack\"\ndate: \"2023-05-21\"\noutput: html_document\n---\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-1_c4e892225d3d2d37d64f3fea36839a9e'}\n\n:::\n\n#### Step 1 - Load the training & test dataset \nAnd preparing them for h2o functions\n\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-2_3034cd82272a10879f32fde72fbb3d0c'}\n\n```{.r .cell-code}\nproduct_backorders_tbl <- read_csv(\"~/Documents/GitHub/ss23-bdml-BenjamKna/product_backorders.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 19053 Columns: 23\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): potential_issue, deck_risk, oe_constraint, ppap_risk, stop_auto_bu...\n#> dbl (16): sku, national_inv, lead_time, in_transit_qty, forecast_3_month, fo...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nset.seed(seed = 3030)\nsplit_obj <- rsample::initial_split(product_backorders_tbl, prop = 0.85)\ntrain_tbl <- training(split_obj)\ntest_tbl <- testing(split_obj)\n\n\n\nrecipe_obj <- recipe(went_on_backorder ~., data = train_tbl) %>% \n  step_zv(all_predictors()) %>% \n  step_mutate_at(names(train_tbl)[train_tbl %>% sapply(is.character)], fn = as.factor) %>% \n  prep()\n\ntrain_tbl <- bake(recipe_obj, new_data = train_tbl)\ntest_tbl  <- bake(recipe_obj, new_data = test_tbl)\n\n\n# Modeling\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         2 days 4 hours \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.1 \n#>     H2O cluster version age:    3 months and 10 days \n#>     H2O cluster name:           H2O_started_from_R_b.knaack_npw377 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.36 GB \n#>     H2O cluster total cores:    8 \n#>     H2O cluster allowed cores:  8 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.1.3 (2022-03-10)\n```\n:::\n\n```{.r .cell-code}\n# Split data into a training and a validation data frame\nsplit_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 1234)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntrain_h2o <- split_h2o[[1]]\nvalid_h2o <- split_h2o[[2]]\ntest_h2o  <- as.h2o(test_tbl) # Leaderboard Frame\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n:::\n\n\n\n\n#### Step 2 - Specifiy the response and predictor variables\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-3_a60054b70b7401e96f8994425f143ed5'}\n\n```{.r .cell-code}\ny <- \"went_on_backorder\" # response variable\nx <- setdiff(names(train_h2o), y) # predictor \n```\n:::\n\n\n#### Step 3 - run AutoML specifying the stopping criterion\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-4_9909554da81beb212dbc4386e2383be3'}\n\n```{.r .cell-code}\nautoml_models_h2o <- h2o.automl(\n  x = x,\n  y = y,\n  training_frame    = train_h2o,\n  validation_frame  = valid_h2o,\n  leaderboard_frame = test_h2o,\n  max_runtime_secs  = 30,\n  nfolds            = 5 \n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   3%\n#> 14:56:51.123: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n:::\n\n\n\n#### Step 4 - View the leaderboard\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-5_361b6ed0a732be57ec0c54bd28ce1510'}\n\n```{.r .cell-code}\n# The leaderboard is a summary of the models produced by H2O AutoML\n\nview(automl_models_h2o@leaderboard)\n\n#slotNames(automl_models_h2o)\n\nautoml_models_h2o@leaderboard\n```\n:::\n\n\n\n#### Step 5 - Predicting using Leader Model\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-6_5782d8ed90846314803848b742372e90'}\n\n```{.r .cell-code}\npredictions <- h2o.predict(automl_models_h2o@leader, newdata = as.h2o(test_tbl))\n\npredictions_tbl <- predictions %>% as_tibble()\n\npredictions_tbl\n```\n:::\n\n\n#### Step 6 - Save the leader model\n\n\n::: {.cell hash='04_challenge_cache/html/unnamed-chunk-7_768954f6b1e18db97bcd0b765777a46c'}\n\n```{.r .cell-code}\nh2o.saveModel(automl_models_h2o@leader,path = \"04_Modeling/h20_models/\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}